version: '3.8'
services:
  api:
    container_name: backend_con
    build:
        context: .
        dockerfile: Dockerfile
    ports:
      - 8005:8080
    depends_on:
      PostgreSQL:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/concertoffice
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    volumes:
      - api:/var/lib/api/data
      
  PostgreSQL:
    image: postgres
    container_name: database_con
    ports:
      - 8010:5432
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=concertoffice
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 2

    volumes:
      - ./PostgreSQL:/docker-entrypoint-createDB.d

volumes:
    pgdata: {}
    api: {}